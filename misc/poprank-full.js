conn = new Mongo("localhost:26000");
db = conn.getDB("db");

// left join article category to read collection
db.getCollection("read").aggregate( [ { $lookup: { from: "article", localField: "aid", foreignField: "aid", as: "article" } }, { $unwind: { path: "$article", } }, { $project: { timestamp: 1, date: {"$toDate": {"$toLong": "$timestamp"}}, aid: 1, readTimeLength: 1, readOrNot: 1, aggreeOrNot: 1, commentOrNot: 1, shareOrNot: 1, category:'$article.category' } }, { $addFields: { year: { $year: "$date" }, month: { $month: "$date" }, day: { $dayOfYear: "$date" }, week: { $week: "$date"}, popScore: {$sum: [{$toInt: "$readOrNot"}, { $multiply: [ {$toInt: "$readTimeLength"}, 0.01 ] }, {$toInt: "$agreeOrNot"}, {$toInt: "$commentOrNot"}, {$toInt: "$shareOrNot"}]} } }, { $project: { aid: 1, category: 1, year: 1, month: 1, day: 1, week: 1, popScore: 1 } }, { $out: "popscore"  }, ] );

// create temp collections and merge
db.getCollection("popscore").aggregate( [ { $group: { _id: { "year": "$year", "aid": "$aid"}, popScoreAgg: { $sum: "$popScore" } } }, { $sort: { "_id.year": -1, "popScoreAgg": -1 } }, { $group: { _id: { "year": "$_id.year"}, articleAidList: {$push: "$_id.aid"} } }, { $project: { _id: 0, year: "$_id.year", month: null, week: null, day: null, articleAidList: { $slice: ["$articleAidList", 5]}, temporalGranularity: "yearly", category: "scitech" } }, { $out: "popyear" }, ], { allowDiskUse: true } );
db.getCollection("popscore").aggregate( [ { $match: { category: "science" } }, { $group: { _id: { "year": "$year", "aid": "$aid"}, popScoreAgg: { $sum: "$popScore" } } }, { $sort: { "_id.year": -1, "popScoreAgg": -1 } }, { $group: { _id: { "year": "$_id.year"}, articleAidList: {$push: "$_id.aid"} } }, { $project: { _id: 0, year: "$_id.year", month: null, week: null, day: null, articleAidList: { $slice: ["$articleAidList", 5]}, temporalGranularity: "yearly", category: "science" } }, { $out: "popyearsci" }, ], { allowDiskUse: true } );
db.getCollection("popscore").aggregate( [ { $group: { _id: { "year": "$year", "week": "$week", "aid": "$aid"}, popScoreAgg: { $sum: "$popScore" } } }, { $sort: { "_id.year": -1, "_id.week": -1, "popScoreAgg": -1 } }, { $group: { _id: { "year": "$_id.year", "week": "$_id.week" }, articleAidList: {$push: "$_id.aid"} } }, { $project: { _id: 0, year: "$_id.year", month: null, week: "$_id.week", day: null, articleAidList: { $slice: ["$articleAidList", 5]}, temporalGranularity: "weekly", category: "scitech" } }, { $out: "popweek" }, ], { allowDiskUse: true } );
db.getCollection("popscore").aggregate( [ { $match: { category:"science" } }, { $group: { _id: { "year": "$year", "week": "$week", "aid": "$aid"}, popScoreAgg: { $sum: "$popScore" } } }, { $sort: { "_id.year": -1, "_id.week": -1, "popScoreAgg": -1 } }, { $group: { _id: { "year": "$_id.year", "week": "$_id.week" }, articleAidList: {$push: "$_id.aid"} } }, { $project: { _id: 0, year: "$_id.year", month: null, week: "$_id.week", day: null, articleAidList: { $slice: ["$articleAidList", 5]}, temporalGranularity: "weekly", category: "science" } }, { $out: "popweeksci" }, ], { allowDiskUse: true } );
db.getCollection("popscore").aggregate( [ { $group: { _id: { "year": "$year", "month": "$month", "aid": "$aid"}, popScoreAgg: { $sum: "$popScore" } } }, { $sort: { "_id.year": -1, "_id.month": -1, "popScoreAgg": -1 } }, { $group: { _id: { "year": "$_id.year", "month": "$_id.month" }, articleAidList: {$push: "$_id.aid"} } }, { $project: { _id: 0, year: "$_id.year", month: "$_id.month", week: null, day: null, articleAidList: { $slice: ["$articleAidList", 5]}, temporalGranularity: "monthly", category: "scitech" } }, { $out: "popmonth" }, ], { allowDiskUse: true } );
db.getCollection("popscore").aggregate( [ { $match: { category:"science" } }, { $group: { _id: { "year": "$year", "month": "$month", "aid": "$aid"}, popScoreAgg: { $sum: "$popScore" } } }, { $sort: { "_id.year": -1, "_id.month": -1, "popScoreAgg": -1 } }, { $group: { _id: { "year": "$_id.year", "month": "$_id.month" }, articleAidList: {$push: "$_id.aid"} } }, { $project: { _id: 0, year: "$_id.year", month: "$_id.month", week: null, day: null, articleAidList: { $slice: ["$articleAidList", 5]}, temporalGranularity: "monthly", category: "science" } }, { $out: "popmonthsci" }, ], { allowDiskUse: true } );
db.getCollection("popscore").aggregate( [ { $group: { _id: { "year": "$year", "day": "$day", "aid": "$aid"}, popScoreAgg: { $sum: "$popScore" } } }, { $sort: { "_id.year": -1, "_id.week": -1, "popScoreAgg": -1 } }, { $group: { _id: { "year": "$_id.year", "day": "$_id.day" }, articleAidList: {$push: "$_id.aid"} } }, { $project: { _id: 0, year: "$_id.year", month: null, week: null, day: "$_id.day", articleAidList: { $slice: ["$articleAidList", 5]}, temporalGranularity: "daily", category: "scitech" } }, { $out: "popday" }, ], { allowDiskUse: true } );
db.getCollection("popscore").aggregate( [ { $match: { category: "science" } }, { $group: { _id: { "year": "$year", "day": "$day", "aid": "$aid"}, popScoreAgg: { $sum: "$popScore" } } }, { $sort: { "_id.year": -1, "_id.week": -1, "popScoreAgg": -1 } }, { $group: { _id: { "year": "$_id.year", "day": "$_id.day" }, articleAidList: {$push: "$_id.aid"} } }, { $project: { _id: 0, year: "$_id.year", month: null, week: null, day: "$_id.day", articleAidList: { $slice: ["$articleAidList", 5]}, temporalGranularity: "daily", category: "science" } }, { $out: "popdaysci" }, ], { allowDiskUse: true } );
db.getCollection("popyear").find({}).forEach( function(doc) { db.popRank.insert(doc) });
db.getCollection("popmonth").find({}).forEach( function(doc) { db.popRank.insert(doc) });
db.getCollection("popweek").find({}).forEach( function(doc) { db.popRank.insert(doc) });
db.getCollection("popday").find({}).forEach( function(doc) { db.popRank.insert(doc) });
db.getCollection("popyearsci").find({}).forEach( function(doc) { db.popRank.insert(doc) });
db.getCollection("popmonthsci").find({}).forEach( function(doc) { db.popRank.insert(doc) });
db.getCollection("popweeksci").find({}).forEach( function(doc) { db.popRank.insert(doc) });
db.getCollection("popdaysci").find({}).forEach( function(doc) { db.popRank.insert(doc) });
db.popRank.aggregate([ {$sort: {year:1, day:1, month:1, week:1}}, {$out: "popRank"} ]);
db.getCollection("popyear").drop();
db.getCollection("popmonth").drop();
db.getCollection("popweek").drop();
db.getCollection("popday").drop();
db.getCollection("popyearsci").drop();
db.getCollection("popmonthsci").drop();
db.getCollection("popweeksci").drop();
db.getCollection("popdaysci").drop();